@using Helpers.Html.Models
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title – ТАВ</title>
    <meta content="" name="description" />
    <meta content="" name="author" />

    <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700&subset=all" rel="stylesheet" type="text/css" />

    @* Metronic Styles *@
    @Styles.Render("~/Assets/GlobalMandatoryStyles")

    @RenderSection("PageLevelStyles", required: false)

    @Styles.Render("~/Assets/ThemeGlobalStyles")
    @Styles.Render("~/Assets/ThemeLayoutStyles")
    @* End Metronic Styles *@

    @Scripts.Render("~/bundles/modernizr")

    <style>
        .page-header {
            height: 51px !important;
        }
    </style>
</head>
<body class="page-container-bg-solid page-header-menu-fixed page-md">
    <div class="page-header">
        @Html.Partial("partials/mainMenu")
    </div>

    <div class="page-container">
        <div class="page-content-wrapper">
            <div class="page-content">
                <div class="container">
                    @RenderBody()
                </div>
            </div>
        </div>
    </div>
    <div class="page-footer">
        <div class="container">
            2016 &copy; Телефоны Авито для всех
        </div>
    </div>
    <div class="scroll-to-top">
        <i class="icon-arrow-up"></i>
    </div>


    <script>
        window["userStaffPopoverPartialUrl"] = '@Url.Action("UserStaffPopoverPartial", "Account")';
    </script>

    @Scripts.Render("~/Assets/CorePlugins")
    @Scripts.Render("~/Assets/GlobalScripts")
    @Scripts.Render("~/Assets/LayoutScripts")

    @{
        var tempToastr = TempData["Toastr"];
    }
    @if (tempToastr != null)
    {
        var toastr = (Toastr)tempToastr;
        var type = "";
        switch (toastr.Type)
        {
            case ToastrType.Success:
                type = "success";
                break;
            case ToastrType.Warning:
                type = "warning";
                break;
            case ToastrType.Danger:
                type = "error";
                break;
            case ToastrType.Info:
                type = "info";
                break;
            default:
                type = null;
                break;
        }
        if (!string.IsNullOrWhiteSpace(type))
        {
            <script>
                toastr["@type"]("@Html.Raw(toastr.Message.Replace("\n", "<br />"))", "@toastr.Title");
            </script>
        }
    }

    @RenderSection("PageLevelScripts", required: false)
</body>

</html>
